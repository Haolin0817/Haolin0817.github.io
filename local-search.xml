<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Linux命令-命令基础</title>
    <link href="/2020/03/17/Linux%E5%91%BD%E4%BB%A4-%E5%91%BD%E4%BB%A4%E5%9F%BA%E7%A1%80/"/>
    <url>/2020/03/17/Linux%E5%91%BD%E4%BB%A4-%E5%91%BD%E4%BB%A4%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<h2 id="Linux命令"><a href="#Linux命令" class="headerlink" title="Linux命令"></a><p align="center">Linux命令</h2><h3 id="命令基础"><a href="#命令基础" class="headerlink" title="命令基础"></a>命令基础</h3><p>Linux命令是严格区分大小写的，<br>登录后会显示一个Shell提示符，普通用户的提示符是$，root用户的提示符是#；<br>查看日期时间：date<br>队列：可以一次提交多条命令，命令之间用分号（;）隔开，Linux会依次执行<br>清屏：clear<br>强制换行：先输入反斜杠（\）再回车<br>输出：echo“ ”<br>查找文件：find / -size +50M（表示在根目录查找文件大小为大于50M的文件）<br>命令置于后台：命令后加一个&amp;</p><h4 id="文件目录类命令"><a href="#文件目录类命令" class="headerlink" title="文件目录类命令"></a>文件目录类命令</h4><p>列出某个目录下文件的信息：ls （-l长格式输出）（-a显示隐藏文件）（–help获取该命令的帮助）</p><h3 id="文件目录命令1"><a href="#文件目录命令1" class="headerlink" title="文件目录命令1"></a>文件目录命令1</h3><p>列出当前工作路径的命令：pwd<br>改变工作路径：cd（..访问父目录；.当前目录）<br>显示文本文件的内容：cat（适用于查看小文件）<br>输出重定向（在其他文件中查看制定目录）：文件名 &gt; 文件名（如果不存在自动创建，已经存在则会覆盖里面的内容，&gt;&gt;表示追加内容；相当于复制了一份）<br>    如果没有输入被输出文件，则会进入键盘输入制定内容，Ctrl+D提交（优点：快速创建小文件）<br>查看内容较长的文件：more +50（回车下一行，空格切一页，50行为一页，只能向下翻页）<br>查看文件：less（可以上下左右翻页，按Q键退出）<br>显示文件前若干行：head 5（前5行）<br>显示文件后若干行：tail 5（后5行）<br>创建目录：mkdir -p a/b/c（-p表示创建多层目录，abc为想要创建的目录）<br>删除空目录：rmdir（必须为空目录，与mkdir作用反之，方法相同）<br>复制文件：cp a b（必须有两个参数）<br>复制目录：cp -R a b<br>重命名文件（移动文件）：mv a b<br>i选项：执行询问（输入y回车表示确定，反之为n）<br>f选项：强制操作<br>r选项：递归<br>删除文件：rm</p><blockquote><p>注意：rm -rf /千万不要执行，尤其使用root账户，这个命令会将你的Linux系统根分区全部清空（格式化）<br>快速创建一个新文件：touch（如果后面的参数对应的文件不存在，就快速创建这个文件，如果这个文件已经存在了则把它的修改时间更新为当前的时间）<br>比较两个文件的区别：diff</p></blockquote><hr><p><strong>硬链接</strong><br>创建链接：ln（默认每个文件链接数初始为1）</p><blockquote><p>链接数：是指向磁盘上这个文件数据存储位置的逻辑上的文件名的个数<br>例如：ln b c 表示为b文件创建一个链接为c，此时b文件的链接数由1变为2，而同时多了一个c文件，c的链接数也是2<br>ln命令默认创建的是硬链接，也就是说，b和c对应磁盘上同一块空间，只是逻辑上是两个文件，但在物理磁盘上，是同一块空间<br>此时删除c，b不会有影响，但指向这个逻辑磁盘数少了一个，链接数由2变为1<br><strong>软链接</strong><br>创建链接：ln -s b c（符号链接/软链接）<br>创建后，b的链接数还是1，此时c文件是一个符号链接文件<br>c删掉后，b也不会受到影响<br>所谓符号链接，有点像Windows系统中的创建快捷方式</p></blockquote>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Linux命令-文件目录命令</title>
    <link href="/2020/03/17/Linux%E5%91%BD%E4%BB%A4-%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95%E5%91%BD%E4%BB%A4/"/>
    <url>/2020/03/17/Linux%E5%91%BD%E4%BB%A4-%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h2 id="Linux命令-文件目录命令"><a href="#Linux命令-文件目录命令" class="headerlink" title="Linux命令-文件目录命令"></a><p align="center">Linux命令-文件目录命令</h2><p align="right">记录人：霖雨成思<h3 id="命令基础"><a href="#命令基础" class="headerlink" title="命令基础"></a>命令基础</h3><p>Linux命令是严格区分大小写的，<br>登录后会显示一个Shell提示符，普通用户的提示符是$，root用户的提示符是#；<br>查看日期时间：date<br>队列：可以一次提交多条命令，命令之间用分号（;）隔开，Linux会依次执行<br>清屏：clear<br>强制换行：先输入反斜杠（\）再回车<br>输出：echo“ ”<br>查找文件：find / -size +50M（表示在根目录查找文件大小为大于50M的文件）<br>例如:find  -name、文件路径或类型(-type f 表示类型必须是普通文件)<br>例如:把文件找出来删掉:find / -size +100M -type f -exec rm -rf {} ; (-exec是执行的意思，找到某些符合条件的命令后，执行后面的命令    {};代表的是我们找到的这个对象  具体执行的命令是用rm把他删掉，然后用rf选项的作用是强制递归)<br>命令置于后台：命令后加一个&amp;</p><h4 id="文件目录类命令"><a href="#文件目录类命令" class="headerlink" title="文件目录类命令"></a>文件目录类命令</h4><p>列出某个目录下文件的信息：ls （-l长格式输出）（-a显示隐藏文件）（–help获取该命令的帮助）（-R目录递归通过）（-ld目录和符号链接信息）</p><h3 id="文件目录命令1"><a href="#文件目录命令1" class="headerlink" title="文件目录命令1"></a>文件目录命令1</h3><p>列出当前工作路径的命令：pwd<br>改变工作路径：cd（..访问父目录；.当前目录）<br>显示文本文件的内容：cat（适用于查看小文件）<br>输出重定向（在其他文件中查看制定目录）：文件名 &gt; 文件名（如果不存在自动创建，已经存在则会覆盖里面的内容，&gt;&gt;表示追加内容；相当于复制了一份）<br>    如果没有输入被输出文件，则会进入键盘输入制定内容，Ctrl+D提交（优点：快速创建小文件）<br>查看内容较长的文件：more +50（回车下一行，空格切一页，50行为一页，只能向下翻页）<br>查看文件：less（可以上下左右翻页，按Q键退出）<br>显示文件前若干行：head 5（前5行）<br>显示文件后若干行：tail 5（后5行）<br>创建目录：mkdir -p a/b/c（-p表示创建多层目录，abc为想要创建的目录）<br>删除空目录：rmdir（必须为空目录，与mkdir作用反之，方法相同）<br>复制文件：cp a b（必须有两个参数）<br>复制目录：cp -R a b<br>剪切、重命名文件（移动文件）：mv a b<br>i选项：执行询问（输入y回车表示确定，反之为n）<br>f选项：强制操作<br>r选项：递归<br>删除文件：rm</p><blockquote><p>注意：rm -rf /千万不要执行，尤其使用root账户，这个命令会将你的Linux系统根分区全部清空（格式化）<br>快速创建一个新文件：touch（如果后面的参数对应的文件不存在，就快速创建这个文件，如果这个文件已经存在了则把它的修改时间更新为当前的时间）<br>比较两个文件的区别：diff</p></blockquote><hr><p><strong>硬链接</strong><br>创建链接：ln（默认每个文件链接数初始为1）</p><blockquote><p>链接数：是指向磁盘上这个文件数据存储位置的逻辑上的文件名的个数<br>例如：ln b c 表示为b文件创建一个链接为c，此时b文件的链接数由1变为2，而同时多了一个c文件，c的链接数也是2<br>ln命令默认创建的是硬链接，也就是说，b和c对应磁盘上同一块空间，只是逻辑上是两个文件，但在物理磁盘上，是同一块空间<br>此时删除c，b不会有影响，但指向这个逻辑磁盘数少了一个，链接数由2变为1<br><strong>软链接</strong><br>创建链接：ln -s b c（符号链接/软链接）<br>创建后，b的链接数还是1，此时c文件是一个符号链接文件<br>c删掉后，b也不会受到影响<br>所谓符号链接，有点像Windows系统中的创建快捷方式</p></blockquote><h3 id="文件目录命令2"><a href="#文件目录命令2" class="headerlink" title="文件目录命令2"></a>文件目录命令2</h3><p>压缩文件命令：gzip -v（表示显示压缩详情信息）压缩后替代原始文件<br>解压文件命令：gunzip -v（表示显示解压详情信息）解压后替代原始文件<br>目录不能压缩，首先需要归档（就是打包，即把它变成一个普通文件，对应的文件扩展名是.tar）<br>在Windows中，文件夹解压可以直接操作，但在Linux下需要分两步：先（tar）归档，再gzip（压缩）<br>z调用gzip；<br>c，create创建归档文件；<br>f，制定file文件名<br>v，view查看信息<br>通常zcvf一起用（tar -zcvf 文件夹），我们从网上下载的Linux文件很多都是.tar.gz这种格式的，意味着都是对目录先归档再压缩生成的。tar -zxvf还原<br>使用RPM命令安装软件包：</p><blockquote><p>软件仓库<br>yum install 软件名称</p></blockquote><blockquote><p>RPM：RedHat Package Manage红帽软件包管理<br>在官网下载相应软件后，deb适用Ubuntu系统，我用的是centos，所以选rpm<br>通常安装命令：rpm -ivh 文件<br>查询软件包安装信息 rpm -qa(把所有已经安装的软件包信息列出来）<br>产看软件包现在是否已经安装：<br>管道操作：“|”叫做管道符，管道的意思是说：把前面命令执行的输出，作为后面命令的输入，相当于一个管子把他们对接了起来<br>grep用来找一个文件里面查找指定的<strong>关键字</strong>，有的话把对应的行显示出来(-n 表示把关键字的前后n行一并显示)<br>查看系统是否安装某个软件包：rpm -qa  软件<br>删除软件包：rpm -e 软件包名<br>查询命令：–help（善于查参数或选项）<br>          man 命令（善于查函数）</p></blockquote><h3 id="文件目录命令3"><a href="#文件目录命令3" class="headerlink" title="文件目录命令3"></a>文件目录命令3</h3><p>列出<strong>命令</strong>在当前系统中磁盘位置的命令:whertis<br>列出某个命令的一句话的介绍:whatis (不是每个程序都有whatis的命令解释)<br>详细说明：–”help”</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Linux网络设置</title>
    <link href="/2020/02/29/Linux%E7%BD%91%E7%BB%9C%E8%AE%BE%E7%BD%AE/"/>
    <url>/2020/02/29/Linux%E7%BD%91%E7%BB%9C%E8%AE%BE%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h2 id="Linux网络设置"><a href="#Linux网络设置" class="headerlink" title="Linux网络设置"></a><p align="center">Linux网络设置</h2><blockquote><p>在视频课中学习的<strong><em>Linux</em></strong>知识做的笔记，包括修改IP、网关、DNS、子网掩码一些指令和方法。</p><p align="right">记录人：霖雨成思</blockquote><h4 id="（在终端命令中）切换root（超级管理员）命令：su"><a href="#（在终端命令中）切换root（超级管理员）命令：su" class="headerlink" title="（在终端命令中）切换root（超级管理员）命令：su"></a>（在终端命令中）切换root（超级管理员）命令：<code>su</code></h4><p><img src="./%7B1OTL6_8QLDKT3%5B103S35X.png" srcset="/img/loading.gif" alt="Alt text"></p><p>$表示是普通用户状态，#表示root状态</p><h4 id="（在终端命令中）切换终端：Alt-F1-F2-F3-F4-F5-F6"><a href="#（在终端命令中）切换终端：Alt-F1-F2-F3-F4-F5-F6" class="headerlink" title="（在终端命令中）切换终端：Alt+F1/F2/F3/F4/F5/F6"></a>（在终端命令中）切换终端：Alt+F1/F2/F3/F4/F5/F6</h4><p>每个终端可以有不同的命令，最多有六个终端</p><p>####（在终端命令中） 更改主机名：<code>hostname 修改的主机名（必须在root权限下）</code><br><img src="./96%7D%7D%5DN_FB0H2TZISI%7DWCNX.png" srcset="/img/loading.gif" alt="Alt text"></p><p>hostname单独写表示查看目前的主机名。注意这种更改只是<strong>临时生效，系统重启会恢复原来的主机名</strong>。</p><p>####（在终端命令下）查看网卡命令：<code>ifconfig</code><br><img src="./LU@S81Q%602ZH0_JR3JJ4%7D0EX.png" srcset="/img/loading.gif" alt="Alt text"></p><p>eth0表示第一块以太网卡<br>lo表示虚拟网卡，一般用于测试</p><p>####（在终端命令下）查看所有的网卡命令（包括不活动的网卡）：<code>ifconfig -a</code><br>####（在终端命令下）关闭网卡命令：<code>ifconfig 网卡名称 down （ifdown 网卡名称）</code><br>####（在终端命令下）启用网卡命令：<code>ifconfig 网卡名称 up（ifup 网卡名称）</code><br>####（在终端命令下）更改网卡IP地址命令：<code>ifconfig 网卡名称 更改的IP 网关地址 子网掩码（临时生效）</code><br>不写网关地址和子网掩码则不修改<br>####（在终端命令下）修改网卡的硬件地址【MAC地址（先关闭网卡）】命令：<code>ifconfig 网卡名称 hw ether 新地址（临时生效）</code><br>####（在终端命令下）查看本机的路由表命令：<code>route</code><br>####（在终端命令下）添加网关命令：<code>route add default gw 网关地址（删除则把add换成del）</code></p><h4 id="永久修改主机名：修改-etc-sysconfig-network文件的HOSTNAME属性"><a href="#永久修改主机名：修改-etc-sysconfig-network文件的HOSTNAME属性" class="headerlink" title="永久修改主机名：修改/etc/sysconfig/network文件的HOSTNAME属性"></a>永久修改主机名：修改/etc/sysconfig/network文件的HOSTNAME属性</h4><h4 id="永久修改网卡、IP地址相关的配置文件：修改-etc-sysconfig-network-scripts-ifcfg-eth0-网卡名"><a href="#永久修改网卡、IP地址相关的配置文件：修改-etc-sysconfig-network-scripts-ifcfg-eth0-网卡名" class="headerlink" title="永久修改网卡、IP地址相关的配置文件：修改/etc/sysconfig/network-scripts/ifcfg-eth0(网卡名)"></a>永久修改网卡、IP地址相关的配置文件：修改/etc/sysconfig/network-scripts/ifcfg-eth0(网卡名)</h4><p><img src="./8@TB6KA1%7BNVBWB%60W%5D@X3%5B$E.png" srcset="/img/loading.gif" alt="Alt text"></p><p>其中ONBOOT为no的话<strong>网络开机默认不会自动连接</strong><br>BOOTPROTO默认是dhcp，意思是自动分配IP地址、子网掩码、网关这些信息，如果需要自己手动配置的话，我们需要把这个地方修改为null，然后在下边配置IP地址、子网掩码、网关这些信息<br>####DNS配置文件位置：/etc/resolv.conf<br><img src="./%7DOYB2S1YIA%60N~T5HNX7ZYJ.png" srcset="/img/loading.gif" alt="Alt text"></p><h4 id="这里需要注意的是，网络相关的配置文件修改之后，需要重启网络服务才能生效。当然，重启系统也是可以的"><a href="#这里需要注意的是，网络相关的配置文件修改之后，需要重启网络服务才能生效。当然，重启系统也是可以的" class="headerlink" title="这里需要注意的是，网络相关的配置文件修改之后，需要重启网络服务才能生效。当然，重启系统也是可以的"></a>这里需要注意的是，网络相关的配置文件修改之后，需要重启网络服务才能生效。当然，重启系统也是可以的</h4><h4 id="字符界面下修改网络配置也是可以的，使用setup命令，会启动一个配置向导"><a href="#字符界面下修改网络配置也是可以的，使用setup命令，会启动一个配置向导" class="headerlink" title="字符界面下修改网络配置也是可以的，使用setup命令，会启动一个配置向导"></a>字符界面下修改网络配置也是可以的，使用setup命令，会启动一个配置向导</h4><p><img src="./KQVBB46V336L6%5DE@3~@ZJ.png" srcset="/img/loading.gif" alt="Alt text"></p><hr><p><img src="./~%7BCFY_NX%7BO36WKDKFHGLAA2.png" srcset="/img/loading.gif" alt="Alt text"></p><hr><p><img src="./5Y1SQL@~F3~VK1%5D3JPYWF9.png" srcset="/img/loading.gif" alt="Alt text"></p><hr><p><img src="./6%5DR3~%5D42%6032A~QRHJXR_3PC.png" srcset="/img/loading.gif" alt="Alt text"></p><h4 id="重启网络服务的命令：service-network-restart"><a href="#重启网络服务的命令：service-network-restart" class="headerlink" title="重启网络服务的命令：service network restart"></a>重启网络服务的命令：<code>service network restart</code></h4><p>这就是修改网络配置的一些常用方法，可以使用命令、配置文件和使用setup向导进行修改，其中setup向导方式和修改配置文件一样都是需要重启网络服务后永久生效的。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>hexo博客搭建——记录采坑大爆炸的艰难历程</title>
    <link href="/2020/02/28/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E2%80%94%E2%80%94%E8%AE%B0%E5%BD%95%E9%87%87%E5%9D%91%E5%A4%A7%E7%88%86%E7%82%B8%E7%9A%84%E8%89%B0%E9%9A%BE%E5%8E%86%E7%A8%8B/"/>
    <url>/2020/02/28/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E2%80%94%E2%80%94%E8%AE%B0%E5%BD%95%E9%87%87%E5%9D%91%E5%A4%A7%E7%88%86%E7%82%B8%E7%9A%84%E8%89%B0%E9%9A%BE%E5%8E%86%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h2 id="hexo博客搭建（只发布到github）"><a href="#hexo博客搭建（只发布到github）" class="headerlink" title="hexo博客搭建（只发布到github）"></a><p align="center">hexo博客搭建（只发布到github）</h2><blockquote><p>想说一下这篇博客完全是实战操作，无任何理论。搜索了很多博客，才把自己的博客软件hexo安装完成，就算是做一个笔记吧。<strong>（本篇只讲述了通过hexo搭建博客传到github中去，并更改主题的经历，并不包含域名和云服务器的故事）</strong></p></blockquote><h3 id="首先准备的材料"><a href="#首先准备的材料" class="headerlink" title="首先准备的材料"></a>首先准备的材料</h3><ul><li>Git安装包</li><li>Node.js安装包</li><li>github账户</li></ul><p>接着讲一下这三个材料都怎么获取</p><h4 id="1-Git安装包官方下载地址-https-cdn-npm-taobao-org-dist-git-for-windows-v2-25-0-windows-1-Git-2-25-0-64-bit-exe"><a href="#1-Git安装包官方下载地址-https-cdn-npm-taobao-org-dist-git-for-windows-v2-25-0-windows-1-Git-2-25-0-64-bit-exe" class="headerlink" title="1. Git安装包官方下载地址 https://cdn.npm.taobao.org/dist/git-for-windows/v2.25.0.windows.1/Git-2.25.0-64-bit.exe"></a>1. Git安装包官方下载地址 <a href="https://cdn.npm.taobao.org/dist/git-for-windows/v2.25.0.windows.1/Git-2.25.0-64-bit.exe" target="_blank" rel="noopener">https://cdn.npm.taobao.org/dist/git-for-windows/v2.25.0.windows.1/Git-2.25.0-64-bit.exe</a></h4><p>下载之后安装就可以了，我安装的时候在<strong>Adjusting your PATH environment下，勾选了Use Git from Git Bash only</strong>（默认是第二个选项，我选择了第一个），接下来全点next就可以了，直到安装完成。</p><h4 id="2-Node-js安装包官方下载地址-https-nodejs-org-dist-v12-16-1-node-v12-16-1-x64-msi"><a href="#2-Node-js安装包官方下载地址-https-nodejs-org-dist-v12-16-1-node-v12-16-1-x64-msi" class="headerlink" title="2. Node.js安装包官方下载地址 https://nodejs.org/dist/v12.16.1/node-v12.16.1-x64.msi"></a>2. Node.js安装包官方下载地址 <a href="https://nodejs.org/dist/v12.16.1/node-v12.16.1-x64.msi" target="_blank" rel="noopener">https://nodejs.org/dist/v12.16.1/node-v12.16.1-x64.msi</a></h4><p>同样，下载之后安装，我的电脑安装之后不可以再进行安装了，如果安装过程中有任何问题，可以百度查询。</p><h4 id="3-github账户"><a href="#3-github账户" class="headerlink" title="3. github账户"></a>3. github账户</h4><p>谷歌登录github官网，进行注册就可以了。这里有个坑被我踩到了，因为我在进入这个官网的过程中，实在是“挤”不进去，这个的解决办法是：***在自己电脑Windows/System32/dribers/etc目录中，找到hosts文件进入编辑，最下方输入<br># Github start<br>192.30.253.112 github.com<br>192.30.253.119 gist.github.com<br>151.101.100.133 assets-cdn.github.com<br>151.101.100.133 raw.githubusercontent.com<br>151.101.100.133 gist.githubusercontent.com<br>151.101.100.133 cloud.githubusercontent.com<br>151.101.100.133 camo.githubusercontent.com<br>151.101.100.133 avatars0.githubusercontent.com<br>151.101.100.133 avatars1.githubusercontent.com<br>151.101.100.133 avatars2.githubusercontent.com<br>151.101.100.133 avatars3.githubusercontent.com<br>151.101.100.133 avatars4.githubusercontent.com<br>151.101.100.133 avatars5.githubusercontent.com<br>151.101.100.133 avatars6.githubusercontent.com<br>151.101.100.133 avatars7.githubusercontent.com<br>151.101.100.133 avatars8.githubusercontent.com<br>192.30.253.113 github.com<br>192.30.253.113 github.com<br>192.30.253.118 gist.github.com<br>192.30.253.119 gist.github.com<br># Github end<br>就可以了，这里想说一下，最好用谷歌浏览器，因为我在许多地方发现，谷歌浏览器进入特别快。</p><h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><h4 id="1-首先在一个位置新建一个空文件夹，名字任意，点进去右键选择Git-Bash-Here（如果没有则是Git安装失败）"><a href="#1-首先在一个位置新建一个空文件夹，名字任意，点进去右键选择Git-Bash-Here（如果没有则是Git安装失败）" class="headerlink" title="1. 首先在一个位置新建一个空文件夹，名字任意，点进去右键选择Git Bash Here（如果没有则是Git安装失败）"></a>1. 首先在一个位置新建一个空文件夹，名字任意，点进去右键选择Git Bash Here（如果没有则是Git安装失败）</h4><h4 id="2-安装hexo的命令："><a href="#2-安装hexo的命令：" class="headerlink" title="2.安装hexo的命令："></a>2.安装hexo的命令：</h4><pre><code>npm install -g hexo-cli</code></pre><p>这一步会很慢很慢。。。再次弹出$ 就可能表示已经成功了，输入hexo -v进行检查，弹出这个就表示成功了</p><pre><code>$ hexo -vhexo: 3.4.2hexo-cli: 1.0.4os: Windows_NT 6.1.7601 win32 x64http_parser: 2.7.0node: 8.9.1v8: 6.1.534.47uv: 1.15.0zlib: 1.2.11ares: 1.10.1-DEVmodules: 57nghttp2: 1.25.0openssl: 1.0.2micu: 59.1unicode: 9.0cldr: 31.0.1tz: 2017b</code></pre><p>继续输入hexo init来初始化hexo，注意，这个是分四次输入的</p><pre><code>hexo inithexo installnpm install hexo-deployer-git --save</code></pre><p>初始化之后，会有一个默认主题和文章，也就是我们的博客</p><pre><code>hexo server //可以简写成hexo s(这是注释)</code></pre><p>这个时候就可以通过浏览器浏览本机端口号4000的默认博客啦！(这里有些细节不一样是因为我后改了一些)。Ctrl+C可以结束</p><p><img src="./EYY99VLIJ56JY1_5Z@F5O.png" srcset="/img/loading.gif" alt="Alt text"></p><p>我们在先暂时不更改默认博客文章的前提下，把本地文章发布到网上，让更多的人看到，这个时候就需要Github账户了<br>下面安装图片提示创建库<br>之前推荐谷歌浏览器，有一部分因为翻译成简体中文比较方便<br><img src="./EQ%60BYZT~51R%7D%7B%60@HFIARG.png" srcset="/img/loading.gif" alt="Alt text"></p><hr><p>接着创建新的库名<br><img src="./POSM%5D%7DWZ%7DT7X21PH7~7_5E.png" srcset="/img/loading.gif" alt="Alt text"></p><hr><p>这个地方注意，名称一定是你的github用户名.github.io，之前我因为打错一个字母，结果。。。坑炸了</p><p><img src="./W37Y%7DR__%60_KB%5D5M74$H.png" srcset="/img/loading.gif" alt="Alt text"></p><hr><p>创建好了之后，如下图，库里是空的，复制箭头指向的地址<br><img src="./66G1%5D1K~6%5BLT9JC%7B7I166.png" srcset="/img/loading.gif" alt="Alt text"></p><hr><p>然后回到自己建的文件夹中找到_config.yml进入编辑，拉到最下边，改成下图所示，并保存</p><pre><code>deploy:  type: git  repo: //刚才自己复制的地址粘贴到这里  branch: master</code></pre><p>然后再到Git Bash中输入hexo g 将本地的博客文章上传到github中去</p><pre><code>hexo d</code></pre><p>等待完成后，浏览器输入<strong>你的githubID.github.io</strong>回车，就会看到上帝的微笑了^_^</p><p>这样，就不止自己能看到了，别人输入上边的地址搜索，也能看到自己的博客。<strong>每当在本地修改一次，就重新部署上传一次</strong>，重新部署主题也是，和上边代码一样，但我一般都先清空缓存一次（分两次输入）</p><pre><code>hexo cleanhexo d</code></pre><h3 id="如何更换主题和发布文章"><a href="#如何更换主题和发布文章" class="headerlink" title="如何更换主题和发布文章"></a>如何更换主题和发布文章</h3><h4 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h4><p>hexo官网上有很多漂亮帅气的主题，每个主题也有部署方法和讲解，我举一个例子：<br>进入hexo官网之后，点击主题<br><img src="./%7DGWDEUB%7D~8ZO~PBVU5XL_6M.png" srcset="/img/loading.gif" alt="Alt text"></p><hr><p>之后选择一个自己喜欢的主题点进去<br><img src="./0BVIN8APMA%7DHF2SA8%5BZ0BJN.png" srcset="/img/loading.gif" alt="Alt text"></p><hr><p>里面就有详细的部署方法，比较常见的几步差不多就是</p><ul><li>下载资源，放到themes文件夹中</li><li>将_config.yml文件中的theme后的默认主题landscape更换成新下载的主题</li><li>hexo clean、hexo d清除缓存后发布</li></ul><p>当然，具体操作步骤还是参考主题发布者（官方）的说明书<br>更换完主题hexo clean和hexo s 在本地看一看，然后就可以hexo d发布到github中去了，主题也就随之更换</p><h4 id="发布文章"><a href="#发布文章" class="headerlink" title="发布文章"></a>发布文章</h4><p>发布文章的话，就在博客文件夹中的sourse文件夹下的_posts下，创建.md文件（markdown语言的文件，可以百度搜索一下），目前没有创建任何文章的情况下，一定会只有一个hello-world.md的文档，可以把这个文档中的开头三行复制过来，把title改一下就行了。因为- - -这种格式会被收录到目录中去。在下边就可以大刀阔斧的编写自己行编写的博客了！编写好了之后保存，在GitBash中同上，hexo clean 和hexo d两条命令发布到github中去。具体markdown语言请参考网上学习资料或视频学习，自认为还是很简单的。<br>我的服务器和域名搭建参考的wang2000博客是<a href="https://www.cnblogs.com/luqwer/p/11328600.html" target="_blank" rel="noopener">https://www.cnblogs.com/luqwer/p/11328600.html</a> 还是很有帮助的。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>我的第一篇博客文章</title>
    <link href="/2020/02/27/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/"/>
    <url>/2020/02/27/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2020/02/26/hello-world/"/>
    <url>/2020/02/26/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
