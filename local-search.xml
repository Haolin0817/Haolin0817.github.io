<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>hexo博客搭建——记录采坑大爆炸的艰难历程</title>
    <link href="/2020/02/28/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E2%80%94%E2%80%94%E8%AE%B0%E5%BD%95%E9%87%87%E5%9D%91%E5%A4%A7%E7%88%86%E7%82%B8%E7%9A%84%E8%89%B0%E9%9A%BE%E5%8E%86%E7%A8%8B/"/>
    <url>/2020/02/28/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E2%80%94%E2%80%94%E8%AE%B0%E5%BD%95%E9%87%87%E5%9D%91%E5%A4%A7%E7%88%86%E7%82%B8%E7%9A%84%E8%89%B0%E9%9A%BE%E5%8E%86%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<p>##<p align="center">hexo博客搭建（只发布到github）</p><blockquote><p>想说一下这篇博客完全是实战操作，无任何理论。搜索了很多博客，才把自己的博客软件hexo安装完成，就算是做一个笔记吧。<strong>（本篇只讲述了通过hexo搭建博客传到github中去，并更改主题的经历，并不包含域名和云服务器的故事）</strong></p></blockquote><h3 id="首先准备的材料"><a href="#首先准备的材料" class="headerlink" title="首先准备的材料"></a>首先准备的材料</h3><ul><li>Git安装包</li><li>Node.js安装包</li><li>github账户</li></ul><p>接着讲一下这三个材料都怎么获取</p><h4 id="1-Git安装包官方下载地址-https-cdn-npm-taobao-org-dist-git-for-windows-v2-25-0-windows-1-Git-2-25-0-64-bit-exe"><a href="#1-Git安装包官方下载地址-https-cdn-npm-taobao-org-dist-git-for-windows-v2-25-0-windows-1-Git-2-25-0-64-bit-exe" class="headerlink" title="1. Git安装包官方下载地址 https://cdn.npm.taobao.org/dist/git-for-windows/v2.25.0.windows.1/Git-2.25.0-64-bit.exe"></a>1. Git安装包官方下载地址 <a href="https://cdn.npm.taobao.org/dist/git-for-windows/v2.25.0.windows.1/Git-2.25.0-64-bit.exe" target="_blank" rel="noopener">https://cdn.npm.taobao.org/dist/git-for-windows/v2.25.0.windows.1/Git-2.25.0-64-bit.exe</a></h4><p>下载之后安装就可以了，我安装的时候在<strong>Adjusting your PATH environment下，勾选了Use Git from Git Bash only</strong>（默认是第二个选项，我选择了第一个），接下来全点next就可以了，直到安装完成。</p><h4 id="2-Node-js安装包官方下载地址-https-nodejs-org-dist-v12-16-1-node-v12-16-1-x64-msi"><a href="#2-Node-js安装包官方下载地址-https-nodejs-org-dist-v12-16-1-node-v12-16-1-x64-msi" class="headerlink" title="2. Node.js安装包官方下载地址 https://nodejs.org/dist/v12.16.1/node-v12.16.1-x64.msi"></a>2. Node.js安装包官方下载地址 <a href="https://nodejs.org/dist/v12.16.1/node-v12.16.1-x64.msi" target="_blank" rel="noopener">https://nodejs.org/dist/v12.16.1/node-v12.16.1-x64.msi</a></h4><p>同样，下载之后安装，我的电脑安装之后不可以再进行安装了，如果安装过程中有任何问题，可以百度查询。</p><h4 id="3-github账户"><a href="#3-github账户" class="headerlink" title="3. github账户"></a>3. github账户</h4><p>谷歌登录github官网，进行注册就可以了。这里有个坑被我踩到了，因为我在进入这个官网的过程中，实在是“挤”不进去，这个的解决办法是：***在自己电脑Windows/System32/dribers/etc目录中，找到hosts文件进入编辑，最下方输入<br># Github start<br>192.30.253.112 github.com<br>192.30.253.119 gist.github.com<br>151.101.100.133 assets-cdn.github.com<br>151.101.100.133 raw.githubusercontent.com<br>151.101.100.133 gist.githubusercontent.com<br>151.101.100.133 cloud.githubusercontent.com<br>151.101.100.133 camo.githubusercontent.com<br>151.101.100.133 avatars0.githubusercontent.com<br>151.101.100.133 avatars1.githubusercontent.com<br>151.101.100.133 avatars2.githubusercontent.com<br>151.101.100.133 avatars3.githubusercontent.com<br>151.101.100.133 avatars4.githubusercontent.com<br>151.101.100.133 avatars5.githubusercontent.com<br>151.101.100.133 avatars6.githubusercontent.com<br>151.101.100.133 avatars7.githubusercontent.com<br>151.101.100.133 avatars8.githubusercontent.com<br>192.30.253.113 github.com<br>192.30.253.113 github.com<br>192.30.253.118 gist.github.com<br>192.30.253.119 gist.github.com<br># Github end<br>就可以了，这里想说一下，最好用谷歌浏览器，因为我在许多地方发现，谷歌浏览器进入特别快。</p><h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><h4 id="1-首先在一个位置新建一个空文件夹，名字任意，点进去右键选择Git-Bash-Here（如果没有则是Git安装失败）"><a href="#1-首先在一个位置新建一个空文件夹，名字任意，点进去右键选择Git-Bash-Here（如果没有则是Git安装失败）" class="headerlink" title="1. 首先在一个位置新建一个空文件夹，名字任意，点进去右键选择Git Bash Here（如果没有则是Git安装失败）"></a>1. 首先在一个位置新建一个空文件夹，名字任意，点进去右键选择Git Bash Here（如果没有则是Git安装失败）</h4><h4 id="2-安装hexo的命令："><a href="#2-安装hexo的命令：" class="headerlink" title="2.安装hexo的命令："></a>2.安装hexo的命令：</h4><pre><code>npm install -g hexo-cli</code></pre><p>这一步会很慢很慢。。。再次弹出$ 就可能表示已经成功了，输入hexo -v进行检查，弹出这个就表示成功了</p><pre><code>$ hexo -vhexo: 3.4.2hexo-cli: 1.0.4os: Windows_NT 6.1.7601 win32 x64http_parser: 2.7.0node: 8.9.1v8: 6.1.534.47uv: 1.15.0zlib: 1.2.11ares: 1.10.1-DEVmodules: 57nghttp2: 1.25.0openssl: 1.0.2micu: 59.1unicode: 9.0cldr: 31.0.1tz: 2017b</code></pre><p>继续输入hexo init来初始化hexo，注意，这个是分四次输入的</p><pre><code>hexo inithexo installnpm install hexo-deployer-git --save</code></pre><p>初始化之后，会有一个默认主题和文章，也就是我们的博客</p><pre><code>hexo server //可以简写成hexo s(这是注释)</code></pre><p>这个时候就可以通过浏览器浏览本机端口号4000的默认博客啦！(这里有些细节不一样是因为我后改了一些)。Ctrl+C可以结束</p><p><img src="./EYY99VLIJ56JY1_5Z@F5O.png" srcset="/img/loading.gif" alt="Alt text"></p><p>我们在先暂时不更改默认博客文章的前提下，把本地文章发布到网上，让更多的人看到，这个时候就需要Github账户了<br>下面安装图片提示创建库<br>之前推荐谷歌浏览器，有一部分因为翻译成简体中文比较方便<br><img src="./EQ%60BYZT~51R%7D%7B%60@HFIARG.png" srcset="/img/loading.gif" alt="Alt text"></p><hr><p>接着创建新的库名<br><img src="./POSM%5D%7DWZ%7DT7X21PH7~7_5E.png" srcset="/img/loading.gif" alt="Alt text"></p><hr><p>这个地方注意，名称一定是你的github用户名.github.io，之前我因为打错一个字母，结果。。。坑炸了</p><p><img src="./W37Y%7DR__%60_KB%5D5M74$H.png" srcset="/img/loading.gif" alt="Alt text"></p><hr><p>创建好了之后，如下图，库里是空的，复制箭头指向的地址<br><img src="./66G1%5D1K~6%5BLT9JC%7B7I166.png" srcset="/img/loading.gif" alt="Alt text"></p><hr><p>然后回到自己建的文件夹中找到_config.yml进入编辑，拉到最下边，改成下图所示，并保存</p><pre><code>deploy:  type: git  repo: //刚才自己复制的地址粘贴到这里  branch: master</code></pre><p>然后再到Git Bash中输入hexo g 将本地的博客文章上传到github中去</p><pre><code>hexo d</code></pre><p>等待完成后，浏览器输入<strong>你的githubID.github.io</strong>回车，就会看到上帝的微笑了^_^</p><p>这样，就不止自己能看到了，别人输入上边的地址搜索，也能看到自己的博客。<strong>每当在本地修改一次，就重新部署上传一次</strong>，重新部署主题也是，和上边代码一样，但我一般都先清空缓存一次（分两次输入）</p><pre><code>hexo cleanhexo d</code></pre><h3 id="如何更换主题和发布文章"><a href="#如何更换主题和发布文章" class="headerlink" title="如何更换主题和发布文章"></a>如何更换主题和发布文章</h3><h4 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h4><p>hexo官网上有很多漂亮帅气的主题，每个主题也有部署方法和讲解，我举一个例子：<br>进入hexo官网之后，点击主题<br><img src="./%7DGWDEUB%7D~8ZO~PBVU5XL_6M.png" srcset="/img/loading.gif" alt="Alt text"></p><hr><p>之后选择一个自己喜欢的主题点进去<br><img src="./0BVIN8APMA%7DHF2SA8%5BZ0BJN.png" srcset="/img/loading.gif" alt="Alt text"></p><hr><p>里面就有详细的部署方法，比较常见的几步差不多就是</p><ul><li>下载资源，放到themes文件夹中</li><li>将_config.yml文件中的theme后的默认主题landscape更换成新下载的主题</li><li>hexo clean、hexo d清除缓存后发布</li></ul><p>当然，具体操作步骤还是参考主题发布者（官方）的说明书<br>更换完主题hexo clean和hexo s 在本地看一看，然后就可以hexo d发布到github中去了，主题也就随之更换</p><h4 id="发布文章"><a href="#发布文章" class="headerlink" title="发布文章"></a>发布文章</h4><p>发布文章的话，就在博客文件夹中的sourse文件夹下的_posts下，创建.md文件（markdown语言的文件，可以百度搜索一下），目前没有创建任何文章的情况下，一定会只有一个hello-world.md的文档，可以把这个文档中的开头三行复制过来，把title改一下就行了。因为- - -这种格式会被收录到目录中去。在下边就可以大刀阔斧的编写自己行编写的博客了！编写好了之后保存，在GitBash中同上，hexo clean 和hexo d两条命令发布到github中去。具体markdown语言请参考网上学习资料或视频学习，自认为还是很简单的。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>我的第一篇博客文章</title>
    <link href="/2020/02/27/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/"/>
    <url>/2020/02/27/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2020/02/26/hello-world/"/>
    <url>/2020/02/26/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
